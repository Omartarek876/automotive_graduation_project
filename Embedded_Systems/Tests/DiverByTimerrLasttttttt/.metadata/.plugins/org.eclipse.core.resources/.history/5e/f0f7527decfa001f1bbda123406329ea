
/*
 *
 *
 * Created on: 21/2/2025
 *      Author: Mariam
 */
#include"ultrasonic.h"

//uint32 duration1 = 0;
//uint32 distance1 = 0;
//uint32 duration2 = 0;
//uint32 distance2 = 0;


/* Function Name: Ultrasonic_1
 * Inputs:        Nothing
 * Returns:       u32 distance1
 * Pins :         Pins used for ultrasonic sensor1 using timer3 as counter PA3 (Trigger) - PB2 (Echo)
 * Description:   It used to measure distance using HC SR04 Ultrasonic sensor module
 * */
void ultrasonic_1 (void){

   // GPIO_Write_Pin(PA, PIN3, LOWV);         //Trigger LOW
    Dio_WriteChannel(DioConf_TRIGGER_CHANNEL_ID_INDEX, STD_LOW);
    Timer0_Delay(10);                       //10 micro-seconds delay
   // GPIO_Write_Pin(PA, PIN3, HIGHV);        //Trigger High
    Dio_WriteChannel(DioConf_TRIGGER_CHANNEL_ID_INDEX, STD_HIGH);
    Timer0_Delay(10);                       //10 micro-seconds delay
    Dio_WriteChannel(DioConf_TRIGGER_CHANNEL_ID_INDEX, STD_LOW);

}

uint32 Measure_distance(void)
{
    int lastEdge, thisEdge;
    ultrasonic_1();

    while(1)
    {
        SET_BIT(GPTMICR3,2);

   // TIMER0->ICR = 4;            /* clear timer0A capture flag */
        while(GET_BIT(GPTMRIS3, 2)==0);
        if(GPIO_PORTB_DATA_REG & (1<<2)){
            lastEdge= GPTMTAR3;;     /* save the timestamp */
            SET_BIT(GPTMICR3,2);
            while(GET_BIT(GPTMRIS3, 2)==0);
            thisEdge= GPTMTAR3;;     /* save the timestamp */
            return (thisEdge - lastEdge); /* return the time difference */

        }

    } }






/* Function Name: Ultrasonic_2
 * Inputs:        Nothing
 * Returns:       u32 distance2
 * Pins :         Pins used for ultrasonic sensor1 using timer2 as counter PA2 (Trigger)  -   PB0  (Echo)
 * Description:   It used to measure distance using HC SR04 Ultrasonic sensor module
 *
u32 ultrasonic_2 (void){
    GPIO_Write_Pin(PA, PIN2, LOWV);             //Trigger LOW
    Timer0_Delay(10);                           //10 micro-seconds delay
    GPIO_Write_Pin(PA, PIN2, HIGHV);            //Trigger High
    Timer0_Delay(10);                           //10 micro-seconds delay
    GPIO_Write_Pin(PA, PIN2, LOWV);             //Trigger-Low
    // Clearing Trigger finished

    duration2 = Timer2_Count_Ret();                          //Return counts of trigger detected by timer2
    distance2 = (((float)duration2*(float)0.00340000))/2;   //calculate the distance with the constant speed of sound

    return  distance2;
}
*/
