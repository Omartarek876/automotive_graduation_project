#include "Critical_Files/Platform_Types.h"
#include "Port_Driver/Port.h"
#include "Dio_Driver/Dio.h"
#include "PWM_Driver/PWM.h"

/* A simple delay routine (adjust loop count for your system clock) */
void delay_ms(uint32 ms)
{
    volatile uint32 i;
    while(ms--)
    {
        for(i = 0; i < 16000; i++) {} /* Roughly 1 ms delay at 16MHz */
    }
}

int main(void)
{

    Port_Init(&Port_Configuration);
    Dio_Init(&Dio_Configuration);

    /* Initialize the PWM driver (configures three channels) */
    PWM_Init();


    /* Update the duty cycle for all three PWM channels */
    PWM_SetDuty(PWM_CHANNEL_0, 90);
    PWM_SetDuty(PWM_CHANNEL_1, 1);

    while(1)
    {

    }
}






/*
 * main.c
 *
 *  Created on:     Aug 13, 2024
 *  Last modified : Dec 20, 2024
 *  Author:         Omar Tarek
 */


#include "Uart_Driver/uart.h"
#include "control_driver/control_app.h"



int main(void) {
    uint8 dataReceived;
    uint8 Motion_Control_Char;

    car_init();
    uartInit(&uart0_cfg);
    uartInit(&uart2_cfg);

    while (1) {
        dataReceived = uart_RecieveByte(2);
        Motion_Control_Char = dataReceived - 48;
        switch (Motion_Control_Char)
        {
        case 1 :
             car_forword();
             UART_SendString(2 , "ACK1");
             break;
        case 2 :
             car_backword();
             UART_SendString(2 , "ACK2");
             break;
        case 3 :
             car_right ();
             UART_SendString(2 , "ACK3");
             break;
        case 4 :
             car_left ();
             UART_SendString(2 , "ACK4");
             break;
        case 5 :
             car_stop ();
             UART_SendString(2 , "ACK5");
             break;
        default :
            UART_SendString(2 , "N-ACK");
            break;
        }
    }
}
