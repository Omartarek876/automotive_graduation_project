// main.c - Main file using the R307 fingerprint sensor driver with enrollment and authentication flow

#include "R307_Finger_Print_Driver/R307.h"   // R307 driver header (provides R307_init, capture, conversion, etc.)
#include "Servo_Motor_Driver/Servo_Motor.h"



void delay_ms(unsigned long long n)
{
    volatile unsigned long long count = 0;
    while(count++ < (364 * n) );
}

// Platform-specific system initialization.
void SystemInit(void) {
    // Initialize system clock, GPIOs, etc.
    // Replace with your actual initialization code.
}

int main(void)
{
    Servo_Init();     // Initialize servo motor for door control
    R307_init();      // Initialize UART and R307 fingerprint sensor
    // (Assume delay functions are available via delay.h)

    // -------------------------------------------------
    // Enrollment Mode: Enroll a New Fingerprint
    // -------------------------------------------------
    // Inform the user to place their finger for enrollment.
    // Enrollment requires two good scans.

    // --- First Scan ---
    while (!R307_captureFinger()) {
        // Wait until the sensor successfully captures a fingerprint image.
    }
    if (!R307_image2Tz(1)) {
        // Handle error if conversion fails.
        // Optionally add error reporting here.
    }

    // Wait for the user to remove their finger.
    delay_ms(2000);

    // --- Second Scan ---
    while (!R307_captureFinger()) {
        // Wait until the sensor captures the second fingerprint image.
    }
    if (!R307_image2Tz(2)) {
        // Handle error.
    }

    // Combine the two scans to create a fingerprint model.
    if (!R307_createModel()) {
        // Handle error.
    }

    // Store the created fingerprint model to flash memory.
    // Here, we're storing it at page 1.
    if (!R307_storeModel(1, 1)) {
        // Handle error.
    }

    // Optionally, lock the door initially.
    Servo_Lock();

    // -------------------------------------------------
    // Authentication Mode: Wait Until the Right Finger is Authenticated
    // -------------------------------------------------
    while (1)
    {
        // Wait until a fingerprint image is captured.
        while (!R307_captureFinger()) {
            // You can add LED indicators or messages here if desired.
        }

        // Convert the captured fingerprint image to a template (Buffer 1).
        if (!R307_image2Tz(1)) {
            // If conversion fails, continue to the next iteration.
            continue;
        }

        // Search for the fingerprint in the sensor's database.
        // Since only one fingerprint is enrolled (stored at page 1), search from page 1 to 1.
        uint16 match_page = 0;
        uint16 match_score = 0;
        if (R307_searchFingerprint(1, 1, &match_page, &match_score)) {
            // Correct fingerprint detected; unlock the door.
          Servo_Unlock();

            // Keep the door unlocked for a fixed period (e.g., 3 seconds).
            delay_ms(3000);

            // Then lock the door again.
            Servo_Lock();
        }

        // Add a delay before trying the next scan.
        delay_ms(2000);
    }
}


















// main.c - Main file using the R307 fingerprint sensor driver with enrollment and authentication flow

#include "R307_Finger_Print_Driver/R307.h"   // R307 driver header (provides R307_init, capture, conversion, etc.)
#include "Servo_Motor_Driver/Servo_Motor.h"




int main(void)
  {
    Servo_Init();     // Initialize servo motor for door control
    while (1)
    {
            Servo_Rotation();
            Delay_MS(20);  // Delay for smooth movement
    }
}
