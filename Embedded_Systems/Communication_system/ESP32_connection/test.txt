worked 

#include <Adafruit_Fingerprint.h>
#include <HardwareSerial.h>
#include <EEPROM.h>
#include <ESP32Servo.h>

#define EEPROM_SIZE 100  
#define fingerRX 16       // Fingerprint sensor RX (ESP TX)
#define fingerTX 17       // Fingerprint sensor TX (ESP RX)
#define SERVO_PIN 18      // moved to avoid UART1 TX (was GPIO 5)
#define RED_LED_PIN 2     // can be changed as needed
#define UART1_TX 5        // UART1 TX pin (to Tiva RX)
#define UART1_RX 4        // UART1 RX pin (from Tiva TX)

HardwareSerial sensorSerial(2);  // UART2 for fingerprint
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&sensorSerial);
Servo doorServo;

void setup() {
  Serial.begin(115200);
  sensorSerial.begin(57600, SERIAL_8N1, fingerRX, fingerTX);  // Fingerprint UART2
  Serial1.begin(9600, SERIAL_8N1, UART1_RX, UART1_TX);        // UART1 to Tiva C

  pinMode(RED_LED_PIN, OUTPUT);
  digitalWrite(RED_LED_PIN, LOW);

  doorServo.attach(SERVO_PIN);  // Use a non-conflicting pin
  doorServo.write(90);  // Initial position

  if (!finger.verifyPassword()) {
    Serial.println("Fingerprint sensor not found!");
    while (1);
  }

  EEPROM.begin(EEPROM_SIZE);
  Serial.println("System Ready! Place your finger to authenticate.");
}

void loop() {
  int fingerprintID = searchFingerprint();
  if (fingerprintID >= 0) {
    Serial.print("Access Granted! Fingerprint ID: ");
    Serial.println(fingerprintID);

    // Send byte to Tiva C
    Serial1.write(6);
    Serial.println("Sent to Tiva C: 6");

    // Check if Tiva responded
    if (Serial1.available()) {
      String receivedData = Serial1.readString();
      Serial.print("Received: ");
      Serial.println(receivedData);
    }

    openDoor();
  } else {
    Serial.println("Access Denied! No match found.");
    indicateFailure();
  }

  delay(3000);
}

int searchFingerprint() {
  Serial.println("Place your finger on the sensor...");

  int p = finger.getImage();
  if (p != FINGERPRINT_OK) return -1;

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK) return -1;

  p = finger.fingerFastSearch();
  if (p == FINGERPRINT_OK) {
    return finger.fingerID;
  }
  return -1;
}

void openDoor() {
  Serial.println("Opening door...");
  doorServo.write(120);  
  delay(1000);           
  doorServo.write(90);   

  delay(3000);  

  Serial.println("Closing door...");
  doorServo.write(60);   
  delay(1000);  
  doorServo.write(90);   
}

void indicateFailure() {
  digitalWrite(RED_LED_PIN, HIGH);
  delay(1000);
  digitalWrite(RED_LED_PIN, LOW);
}









************************

#define RXD2 16 // GPIO16 for RX (UART2)
#define TXD2 17 // GPIO17 for TX (UART2)

void setup() {
  // Initialize UART0 (USB Serial) for communication with Serial Monitor
  Serial.begin(115200);

  // Initialize UART2 for communication with Tiva C
  Serial2.begin(9600, SERIAL_8N1, RXD2, TXD2);

  // Confirmation message to Serial Monitor
  Serial.println("ESP32 is ready to communicate with Tiva C.");
}

void loop() {
  char message = '1'; // Define the character to send

  // Send the character to Tiva C via UART2
  Serial2.print(message); // Send the character
  Serial.print("Sent to Tiva C: ");
  Serial.println(message); // Confirm the sent character in Serial Monitor

  // Check if data is available from Tiva C
  if (Serial2.available()) {  
    String receivedData = Serial2.readString(); // Read all available data as a String
/*
    // Check if "ack" is in the received data
    if (receivedData.indexOf("ack") != -1) {
      Serial.println("Received 'ack' from Tiva C!");
    } else {
      */
      Serial.print("Received: ");
      Serial.println(receivedData); // Print the received data for debugging
    
  }

  delay(1000); // Delay 1 second between transmissions
}
